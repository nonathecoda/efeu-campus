/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.fzi.efeu.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-09-15T09:15:36.283107100+02:00[Europe/Berlin]")

@Validated
@Api(value = "RechargingScheduling", description = "the RechargingScheduling API")
public interface RechargingSchedulingApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /scheduleRechargingOrders/ : schedule new recharging orders
     *
     * @return Success (status code 200)
     *         or Failure (status code 400)
     */
    @ApiOperation(value = "schedule new recharging orders", nickname = "scheduleRechargingOrders", notes = "", tags={ "RechargingScheduling", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success"),
        @ApiResponse(code = 400, message = "Failure") })
    @RequestMapping(value = "/scheduleRechargingOrders/",
        method = RequestMethod.POST)
    default ResponseEntity<Void> scheduleRechargingOrders() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
