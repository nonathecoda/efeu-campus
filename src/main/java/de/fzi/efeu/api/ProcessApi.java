/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.fzi.efeu.api;

import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-07-10T14:10:36.203026900+02:00[Europe/Berlin]")

@Validated
@Api(value = "process", description = "the process API")
public interface ProcessApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /process/trips/{id}/fix
     *
     * @param id efeu ID (required)
     * @return Success (status code 200)
     */
    @ApiOperation(value = "", nickname = "fixTrip", notes = "", response = String.class, tags={ "Process", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class) })
    @RequestMapping(value = "/process/trips/{id}/fix",
        produces = { "text/plain" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> fixTrip(@ApiParam(value = "efeu ID", required = true) @PathVariable("id") String id) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /process/health/
     *
     * @return Success (status code 200)
     */
    @ApiOperation(value = "", nickname = "getHealth", notes = "", response = String.class, tags={ "Process", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class) })
    @RequestMapping(value = "/process/health/",
        produces = { "text/plain" }, 
        method = RequestMethod.GET)
    default ResponseEntity<String> getHealth() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /process/plan
     *
     * @return Success (status code 200)
     */
    @ApiOperation(value = "", nickname = "plan", notes = "", response = String.class, tags={ "Process", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class) })
    @RequestMapping(value = "/process/plan",
        produces = { "text/plain" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> plan() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /process/orders/update/
     *
     * @return Success (status code 200)
     */
    @ApiOperation(value = "", nickname = "updateOrders", notes = "", response = String.class, tags={ "Process", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class) })
    @RequestMapping(value = "/process/orders/update/",
        produces = { "text/plain" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> updateOrders() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /process/trips/update/
     *
     * @return Success (status code 200)
     */
    @ApiOperation(value = "", nickname = "updateTrips", notes = "", response = String.class, tags={ "Process", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = String.class) })
    @RequestMapping(value = "/process/trips/update/",
        produces = { "text/plain" }, 
        method = RequestMethod.POST)
    default ResponseEntity<String> updateTrips() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
